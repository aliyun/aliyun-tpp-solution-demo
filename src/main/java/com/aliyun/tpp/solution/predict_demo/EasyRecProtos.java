// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: easyrec.proto

package com.aliyun.tpp.solution.predict_demo;

public final class EasyRecProtos {
  private EasyRecProtos() {}
  public static void registerAllExtensions(
      shade.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      shade.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (shade.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ContextFeaturesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:eas.aggregator.ContextFeatures)
      shade.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string features = 1;</code>
     */
    java.util.List<String>
        getFeaturesList();
    /**
     * <code>repeated string features = 1;</code>
     */
    int getFeaturesCount();
    /**
     * <code>repeated string features = 1;</code>
     */
    String getFeatures(int index);
    /**
     * <code>repeated string features = 1;</code>
     */
    shade.protobuf.ByteString
        getFeaturesBytes(int index);
  }
  /**
   * <pre>
   * context features
   * </pre>
   *
   * Protobuf type {@code eas.aggregator.ContextFeatures}
   */
  public  static final class ContextFeatures extends
      shade.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:eas.aggregator.ContextFeatures)
      ContextFeaturesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContextFeatures.newBuilder() to construct.
    private ContextFeatures(shade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContextFeatures() {
      features_ = shade.protobuf.LazyStringArrayList.EMPTY;
    }

    @Override
    public final shade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ContextFeatures(
        shade.protobuf.CodedInputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      shade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                features_ = new shade.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              features_.add(s);
              break;
            }
          }
        }
      } catch (shade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          features_ = features_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EasyRecProtos.internal_static_eas_aggregator_ContextFeatures_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EasyRecProtos.internal_static_eas_aggregator_ContextFeatures_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ContextFeatures.class, Builder.class);
    }

    public static final int FEATURES_FIELD_NUMBER = 1;
    private shade.protobuf.LazyStringList features_;
    /**
     * <code>repeated string features = 1;</code>
     */
    public shade.protobuf.ProtocolStringList
        getFeaturesList() {
      return features_;
    }
    /**
     * <code>repeated string features = 1;</code>
     */
    public int getFeaturesCount() {
      return features_.size();
    }
    /**
     * <code>repeated string features = 1;</code>
     */
    public String getFeatures(int index) {
      return features_.get(index);
    }
    /**
     * <code>repeated string features = 1;</code>
     */
    public shade.protobuf.ByteString
        getFeaturesBytes(int index) {
      return features_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(shade.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < features_.size(); i++) {
        shade.protobuf.GeneratedMessageV3.writeString(output, 1, features_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < features_.size(); i++) {
          dataSize += computeStringSizeNoTag(features_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getFeaturesList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ContextFeatures)) {
        return super.equals(obj);
      }
      ContextFeatures other = (ContextFeatures) obj;

      boolean result = true;
      result = result && getFeaturesList()
          .equals(other.getFeaturesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFeaturesCount() > 0) {
        hash = (37 * hash) + FEATURES_FIELD_NUMBER;
        hash = (53 * hash) + getFeaturesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ContextFeatures parseFrom(
        java.nio.ByteBuffer data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ContextFeatures parseFrom(
        java.nio.ByteBuffer data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ContextFeatures parseFrom(
        shade.protobuf.ByteString data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ContextFeatures parseFrom(
        shade.protobuf.ByteString data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ContextFeatures parseFrom(byte[] data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ContextFeatures parseFrom(
        byte[] data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ContextFeatures parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ContextFeatures parseFrom(
        java.io.InputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ContextFeatures parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ContextFeatures parseDelimitedFrom(
        java.io.InputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ContextFeatures parseFrom(
        shade.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ContextFeatures parseFrom(
        shade.protobuf.CodedInputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ContextFeatures prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * context features
     * </pre>
     *
     * Protobuf type {@code eas.aggregator.ContextFeatures}
     */
    public static final class Builder extends
        shade.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:eas.aggregator.ContextFeatures)
        ContextFeaturesOrBuilder {
      public static final shade.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EasyRecProtos.internal_static_eas_aggregator_ContextFeatures_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EasyRecProtos.internal_static_eas_aggregator_ContextFeatures_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ContextFeatures.class, Builder.class);
      }

      // Construct using com.alibaba.openrec.proto.EasyRecProtos.ContextFeatures.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        features_ = shade.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public shade.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EasyRecProtos.internal_static_eas_aggregator_ContextFeatures_descriptor;
      }

      public ContextFeatures getDefaultInstanceForType() {
        return ContextFeatures.getDefaultInstance();
      }

      public ContextFeatures build() {
        ContextFeatures result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ContextFeatures buildPartial() {
        ContextFeatures result = new ContextFeatures(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          features_ = features_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.features_ = features_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          shade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          shade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(shade.protobuf.Message other) {
        if (other instanceof ContextFeatures) {
          return mergeFrom((ContextFeatures)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ContextFeatures other) {
        if (other == ContextFeatures.getDefaultInstance()) return this;
        if (!other.features_.isEmpty()) {
          if (features_.isEmpty()) {
            features_ = other.features_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFeaturesIsMutable();
            features_.addAll(other.features_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          shade.protobuf.CodedInputStream input,
          shade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ContextFeatures parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ContextFeatures) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private shade.protobuf.LazyStringList features_ = shade.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFeaturesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          features_ = new shade.protobuf.LazyStringArrayList(features_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string features = 1;</code>
       */
      public shade.protobuf.ProtocolStringList
          getFeaturesList() {
        return features_.getUnmodifiableView();
      }
      /**
       * <code>repeated string features = 1;</code>
       */
      public int getFeaturesCount() {
        return features_.size();
      }
      /**
       * <code>repeated string features = 1;</code>
       */
      public String getFeatures(int index) {
        return features_.get(index);
      }
      /**
       * <code>repeated string features = 1;</code>
       */
      public shade.protobuf.ByteString
          getFeaturesBytes(int index) {
        return features_.getByteString(index);
      }
      /**
       * <code>repeated string features = 1;</code>
       */
      public Builder setFeatures(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFeaturesIsMutable();
        features_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string features = 1;</code>
       */
      public Builder addFeatures(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFeaturesIsMutable();
        features_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string features = 1;</code>
       */
      public Builder addAllFeatures(
          Iterable<String> values) {
        ensureFeaturesIsMutable();
        shade.protobuf.AbstractMessageLite.Builder.addAll(
            values, features_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string features = 1;</code>
       */
      public Builder clearFeatures() {
        features_ = shade.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string features = 1;</code>
       */
      public Builder addFeaturesBytes(
          shade.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureFeaturesIsMutable();
        features_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:eas.aggregator.ContextFeatures)
    }

    // @@protoc_insertion_point(class_scope:eas.aggregator.ContextFeatures)
    private static final ContextFeatures DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ContextFeatures();
    }

    public static ContextFeatures getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final shade.protobuf.Parser<ContextFeatures>
        PARSER = new shade.protobuf.AbstractParser<ContextFeatures>() {
      public ContextFeatures parsePartialFrom(
          shade.protobuf.CodedInputStream input,
          shade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws shade.protobuf.InvalidProtocolBufferException {
          return new ContextFeatures(input, extensionRegistry);
      }
    };

    public static shade.protobuf.Parser<ContextFeatures> parser() {
      return PARSER;
    }

    @Override
    public shade.protobuf.Parser<ContextFeatures> getParserForType() {
      return PARSER;
    }

    public ContextFeatures getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PBRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:eas.aggregator.PBRequest)
      shade.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * debug mode
     * </pre>
     *
     * <code>bool debug_mode = 1;</code>
     */
    boolean getDebugMode();

    /**
     * <pre>
     * user features
     * </pre>
     *
     * <code>map&lt;string, string&gt; user_features = 2;</code>
     */
    int getUserFeaturesCount();
    /**
     * <pre>
     * user features
     * </pre>
     *
     * <code>map&lt;string, string&gt; user_features = 2;</code>
     */
    boolean containsUserFeatures(
        String key);
    /**
     * Use {@link #getUserFeaturesMap()} instead.
     */
    @Deprecated
    java.util.Map<String, String>
    getUserFeatures();
    /**
     * <pre>
     * user features
     * </pre>
     *
     * <code>map&lt;string, string&gt; user_features = 2;</code>
     */
    java.util.Map<String, String>
    getUserFeaturesMap();
    /**
     * <pre>
     * user features
     * </pre>
     *
     * <code>map&lt;string, string&gt; user_features = 2;</code>
     */

    String getUserFeaturesOrDefault(
        String key,
        String defaultValue);
    /**
     * <pre>
     * user features
     * </pre>
     *
     * <code>map&lt;string, string&gt; user_features = 2;</code>
     */

    String getUserFeaturesOrThrow(
        String key);

    /**
     * <pre>
     * item ids
     * </pre>
     *
     * <code>repeated string item_ids = 3;</code>
     */
    java.util.List<String>
        getItemIdsList();
    /**
     * <pre>
     * item ids
     * </pre>
     *
     * <code>repeated string item_ids = 3;</code>
     */
    int getItemIdsCount();
    /**
     * <pre>
     * item ids
     * </pre>
     *
     * <code>repeated string item_ids = 3;</code>
     */
    String getItemIds(int index);
    /**
     * <pre>
     * item ids
     * </pre>
     *
     * <code>repeated string item_ids = 3;</code>
     */
    shade.protobuf.ByteString
        getItemIdsBytes(int index);

    /**
     * <pre>
     * context features for each item
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
     */
    int getContextFeaturesCount();
    /**
     * <pre>
     * context features for each item
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
     */
    boolean containsContextFeatures(
        String key);
    /**
     * Use {@link #getContextFeaturesMap()} instead.
     */
    @Deprecated
    java.util.Map<String, ContextFeatures>
    getContextFeatures();
    /**
     * <pre>
     * context features for each item
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
     */
    java.util.Map<String, ContextFeatures>
    getContextFeaturesMap();
    /**
     * <pre>
     * context features for each item
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
     */

    ContextFeatures getContextFeaturesOrDefault(
        String key,
        ContextFeatures defaultValue);
    /**
     * <pre>
     * context features for each item
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
     */

    ContextFeatures getContextFeaturesOrThrow(
        String key);
  }
  /**
   * <pre>
   * PBRequest specifies the request for aggregator
   * </pre>
   *
   * Protobuf type {@code eas.aggregator.PBRequest}
   */
  public  static final class PBRequest extends
      shade.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:eas.aggregator.PBRequest)
      PBRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PBRequest.newBuilder() to construct.
    private PBRequest(shade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PBRequest() {
      debugMode_ = false;
      itemIds_ = shade.protobuf.LazyStringArrayList.EMPTY;
    }

    @Override
    public final shade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PBRequest(
        shade.protobuf.CodedInputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      shade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              debugMode_ = input.readBool();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                userFeatures_ = shade.protobuf.MapField.newMapField(
                    UserFeaturesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              shade.protobuf.MapEntry<String, String>
              userFeatures__ = input.readMessage(
                  UserFeaturesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              userFeatures_.getMutableMap().put(
                  userFeatures__.getKey(), userFeatures__.getValue());
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                itemIds_ = new shade.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              itemIds_.add(s);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                contextFeatures_ = shade.protobuf.MapField.newMapField(
                    ContextFeaturesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              shade.protobuf.MapEntry<String, ContextFeatures>
              contextFeatures__ = input.readMessage(
                  ContextFeaturesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              contextFeatures_.getMutableMap().put(
                  contextFeatures__.getKey(), contextFeatures__.getValue());
              break;
            }
          }
        }
      } catch (shade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          itemIds_ = itemIds_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EasyRecProtos.internal_static_eas_aggregator_PBRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected shade.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetUserFeatures();
        case 4:
          return internalGetContextFeatures();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EasyRecProtos.internal_static_eas_aggregator_PBRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PBRequest.class, Builder.class);
    }

    private int bitField0_;
    public static final int DEBUG_MODE_FIELD_NUMBER = 1;
    private boolean debugMode_;
    /**
     * <pre>
     * debug mode
     * </pre>
     *
     * <code>bool debug_mode = 1;</code>
     */
    public boolean getDebugMode() {
      return debugMode_;
    }

    public static final int USER_FEATURES_FIELD_NUMBER = 2;
    private static final class UserFeaturesDefaultEntryHolder {
      static final shade.protobuf.MapEntry<
          String, String> defaultEntry =
              shade.protobuf.MapEntry
              .<String, String>newDefaultInstance(
                  EasyRecProtos.internal_static_eas_aggregator_PBRequest_UserFeaturesEntry_descriptor,
                  shade.protobuf.WireFormat.FieldType.STRING,
                  "",
                  shade.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private shade.protobuf.MapField<
        String, String> userFeatures_;
    private shade.protobuf.MapField<String, String>
    internalGetUserFeatures() {
      if (userFeatures_ == null) {
        return shade.protobuf.MapField.emptyMapField(
            UserFeaturesDefaultEntryHolder.defaultEntry);
      }
      return userFeatures_;
    }

    public int getUserFeaturesCount() {
      return internalGetUserFeatures().getMap().size();
    }
    /**
     * <pre>
     * user features
     * </pre>
     *
     * <code>map&lt;string, string&gt; user_features = 2;</code>
     */

    public boolean containsUserFeatures(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetUserFeatures().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUserFeaturesMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, String> getUserFeatures() {
      return getUserFeaturesMap();
    }
    /**
     * <pre>
     * user features
     * </pre>
     *
     * <code>map&lt;string, string&gt; user_features = 2;</code>
     */

    public java.util.Map<String, String> getUserFeaturesMap() {
      return internalGetUserFeatures().getMap();
    }
    /**
     * <pre>
     * user features
     * </pre>
     *
     * <code>map&lt;string, string&gt; user_features = 2;</code>
     */

    public String getUserFeaturesOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetUserFeatures().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * user features
     * </pre>
     *
     * <code>map&lt;string, string&gt; user_features = 2;</code>
     */

    public String getUserFeaturesOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetUserFeatures().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ITEM_IDS_FIELD_NUMBER = 3;
    private shade.protobuf.LazyStringList itemIds_;
    /**
     * <pre>
     * item ids
     * </pre>
     *
     * <code>repeated string item_ids = 3;</code>
     */
    public shade.protobuf.ProtocolStringList
        getItemIdsList() {
      return itemIds_;
    }
    /**
     * <pre>
     * item ids
     * </pre>
     *
     * <code>repeated string item_ids = 3;</code>
     */
    public int getItemIdsCount() {
      return itemIds_.size();
    }
    /**
     * <pre>
     * item ids
     * </pre>
     *
     * <code>repeated string item_ids = 3;</code>
     */
    public String getItemIds(int index) {
      return itemIds_.get(index);
    }
    /**
     * <pre>
     * item ids
     * </pre>
     *
     * <code>repeated string item_ids = 3;</code>
     */
    public shade.protobuf.ByteString
        getItemIdsBytes(int index) {
      return itemIds_.getByteString(index);
    }

    public static final int CONTEXT_FEATURES_FIELD_NUMBER = 4;
    private static final class ContextFeaturesDefaultEntryHolder {
      static final shade.protobuf.MapEntry<
          String, ContextFeatures> defaultEntry =
              shade.protobuf.MapEntry
              .<String, ContextFeatures>newDefaultInstance(
                  EasyRecProtos.internal_static_eas_aggregator_PBRequest_ContextFeaturesEntry_descriptor,
                  shade.protobuf.WireFormat.FieldType.STRING,
                  "",
                  shade.protobuf.WireFormat.FieldType.MESSAGE,
                  ContextFeatures.getDefaultInstance());
    }
    private shade.protobuf.MapField<
        String, ContextFeatures> contextFeatures_;
    private shade.protobuf.MapField<String, ContextFeatures>
    internalGetContextFeatures() {
      if (contextFeatures_ == null) {
        return shade.protobuf.MapField.emptyMapField(
            ContextFeaturesDefaultEntryHolder.defaultEntry);
      }
      return contextFeatures_;
    }

    public int getContextFeaturesCount() {
      return internalGetContextFeatures().getMap().size();
    }
    /**
     * <pre>
     * context features for each item
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
     */

    public boolean containsContextFeatures(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetContextFeatures().getMap().containsKey(key);
    }
    /**
     * Use {@link #getContextFeaturesMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, ContextFeatures> getContextFeatures() {
      return getContextFeaturesMap();
    }
    /**
     * <pre>
     * context features for each item
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
     */

    public java.util.Map<String, ContextFeatures> getContextFeaturesMap() {
      return internalGetContextFeatures().getMap();
    }
    /**
     * <pre>
     * context features for each item
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
     */

    public ContextFeatures getContextFeaturesOrDefault(
        String key,
        ContextFeatures defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, ContextFeatures> map =
          internalGetContextFeatures().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * context features for each item
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
     */

    public ContextFeatures getContextFeaturesOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, ContextFeatures> map =
          internalGetContextFeatures().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(shade.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (debugMode_ != false) {
        output.writeBool(1, debugMode_);
      }
      shade.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetUserFeatures(),
          UserFeaturesDefaultEntryHolder.defaultEntry,
          2);
      for (int i = 0; i < itemIds_.size(); i++) {
        shade.protobuf.GeneratedMessageV3.writeString(output, 3, itemIds_.getRaw(i));
      }
      shade.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetContextFeatures(),
          ContextFeaturesDefaultEntryHolder.defaultEntry,
          4);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (debugMode_ != false) {
        size += shade.protobuf.CodedOutputStream
          .computeBoolSize(1, debugMode_);
      }
      for (java.util.Map.Entry<String, String> entry
           : internalGetUserFeatures().getMap().entrySet()) {
        shade.protobuf.MapEntry<String, String>
        userFeatures__ = UserFeaturesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += shade.protobuf.CodedOutputStream
            .computeMessageSize(2, userFeatures__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < itemIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(itemIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getItemIdsList().size();
      }
      for (java.util.Map.Entry<String, ContextFeatures> entry
           : internalGetContextFeatures().getMap().entrySet()) {
        shade.protobuf.MapEntry<String, ContextFeatures>
        contextFeatures__ = ContextFeaturesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += shade.protobuf.CodedOutputStream
            .computeMessageSize(4, contextFeatures__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PBRequest)) {
        return super.equals(obj);
      }
      PBRequest other = (PBRequest) obj;

      boolean result = true;
      result = result && (getDebugMode()
          == other.getDebugMode());
      result = result && internalGetUserFeatures().equals(
          other.internalGetUserFeatures());
      result = result && getItemIdsList()
          .equals(other.getItemIdsList());
      result = result && internalGetContextFeatures().equals(
          other.internalGetContextFeatures());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEBUG_MODE_FIELD_NUMBER;
      hash = (53 * hash) + shade.protobuf.Internal.hashBoolean(
          getDebugMode());
      if (!internalGetUserFeatures().getMap().isEmpty()) {
        hash = (37 * hash) + USER_FEATURES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUserFeatures().hashCode();
      }
      if (getItemIdsCount() > 0) {
        hash = (37 * hash) + ITEM_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getItemIdsList().hashCode();
      }
      if (!internalGetContextFeatures().getMap().isEmpty()) {
        hash = (37 * hash) + CONTEXT_FEATURES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetContextFeatures().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PBRequest parseFrom(
        java.nio.ByteBuffer data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBRequest parseFrom(
        java.nio.ByteBuffer data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBRequest parseFrom(
        shade.protobuf.ByteString data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBRequest parseFrom(
        shade.protobuf.ByteString data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBRequest parseFrom(byte[] data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBRequest parseFrom(
        byte[] data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PBRequest parseFrom(
        java.io.InputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PBRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PBRequest parseDelimitedFrom(
        java.io.InputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PBRequest parseFrom(
        shade.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PBRequest parseFrom(
        shade.protobuf.CodedInputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PBRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PBRequest specifies the request for aggregator
     * </pre>
     *
     * Protobuf type {@code eas.aggregator.PBRequest}
     */
    public static final class Builder extends
        shade.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:eas.aggregator.PBRequest)
        PBRequestOrBuilder {
      public static final shade.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EasyRecProtos.internal_static_eas_aggregator_PBRequest_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetUserFeatures();
          case 4:
            return internalGetContextFeatures();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableUserFeatures();
          case 4:
            return internalGetMutableContextFeatures();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EasyRecProtos.internal_static_eas_aggregator_PBRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PBRequest.class, Builder.class);
      }

      // Construct using com.alibaba.openrec.proto.EasyRecProtos.PBRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        debugMode_ = false;

        internalGetMutableUserFeatures().clear();
        itemIds_ = shade.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        internalGetMutableContextFeatures().clear();
        return this;
      }

      public shade.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EasyRecProtos.internal_static_eas_aggregator_PBRequest_descriptor;
      }

      public PBRequest getDefaultInstanceForType() {
        return PBRequest.getDefaultInstance();
      }

      public PBRequest build() {
        PBRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PBRequest buildPartial() {
        PBRequest result = new PBRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.debugMode_ = debugMode_;
        result.userFeatures_ = internalGetUserFeatures();
        result.userFeatures_.makeImmutable();
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          itemIds_ = itemIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.itemIds_ = itemIds_;
        result.contextFeatures_ = internalGetContextFeatures();
        result.contextFeatures_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          shade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          shade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(shade.protobuf.Message other) {
        if (other instanceof PBRequest) {
          return mergeFrom((PBRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PBRequest other) {
        if (other == PBRequest.getDefaultInstance()) return this;
        if (other.getDebugMode() != false) {
          setDebugMode(other.getDebugMode());
        }
        internalGetMutableUserFeatures().mergeFrom(
            other.internalGetUserFeatures());
        if (!other.itemIds_.isEmpty()) {
          if (itemIds_.isEmpty()) {
            itemIds_ = other.itemIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureItemIdsIsMutable();
            itemIds_.addAll(other.itemIds_);
          }
          onChanged();
        }
        internalGetMutableContextFeatures().mergeFrom(
            other.internalGetContextFeatures());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          shade.protobuf.CodedInputStream input,
          shade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PBRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PBRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean debugMode_ ;
      /**
       * <pre>
       * debug mode
       * </pre>
       *
       * <code>bool debug_mode = 1;</code>
       */
      public boolean getDebugMode() {
        return debugMode_;
      }
      /**
       * <pre>
       * debug mode
       * </pre>
       *
       * <code>bool debug_mode = 1;</code>
       */
      public Builder setDebugMode(boolean value) {
        
        debugMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * debug mode
       * </pre>
       *
       * <code>bool debug_mode = 1;</code>
       */
      public Builder clearDebugMode() {
        
        debugMode_ = false;
        onChanged();
        return this;
      }

      private shade.protobuf.MapField<
          String, String> userFeatures_;
      private shade.protobuf.MapField<String, String>
      internalGetUserFeatures() {
        if (userFeatures_ == null) {
          return shade.protobuf.MapField.emptyMapField(
              UserFeaturesDefaultEntryHolder.defaultEntry);
        }
        return userFeatures_;
      }
      private shade.protobuf.MapField<String, String>
      internalGetMutableUserFeatures() {
        onChanged();;
        if (userFeatures_ == null) {
          userFeatures_ = shade.protobuf.MapField.newMapField(
              UserFeaturesDefaultEntryHolder.defaultEntry);
        }
        if (!userFeatures_.isMutable()) {
          userFeatures_ = userFeatures_.copy();
        }
        return userFeatures_;
      }

      public int getUserFeaturesCount() {
        return internalGetUserFeatures().getMap().size();
      }
      /**
       * <pre>
       * user features
       * </pre>
       *
       * <code>map&lt;string, string&gt; user_features = 2;</code>
       */

      public boolean containsUserFeatures(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetUserFeatures().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUserFeaturesMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, String> getUserFeatures() {
        return getUserFeaturesMap();
      }
      /**
       * <pre>
       * user features
       * </pre>
       *
       * <code>map&lt;string, string&gt; user_features = 2;</code>
       */

      public java.util.Map<String, String> getUserFeaturesMap() {
        return internalGetUserFeatures().getMap();
      }
      /**
       * <pre>
       * user features
       * </pre>
       *
       * <code>map&lt;string, string&gt; user_features = 2;</code>
       */

      public String getUserFeaturesOrDefault(
          String key,
          String defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetUserFeatures().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * user features
       * </pre>
       *
       * <code>map&lt;string, string&gt; user_features = 2;</code>
       */

      public String getUserFeaturesOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetUserFeatures().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearUserFeatures() {
        internalGetMutableUserFeatures().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * user features
       * </pre>
       *
       * <code>map&lt;string, string&gt; user_features = 2;</code>
       */

      public Builder removeUserFeatures(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableUserFeatures().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, String>
      getMutableUserFeatures() {
        return internalGetMutableUserFeatures().getMutableMap();
      }
      /**
       * <pre>
       * user features
       * </pre>
       *
       * <code>map&lt;string, string&gt; user_features = 2;</code>
       */
      public Builder putUserFeatures(
          String key,
          String value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableUserFeatures().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * user features
       * </pre>
       *
       * <code>map&lt;string, string&gt; user_features = 2;</code>
       */

      public Builder putAllUserFeatures(
          java.util.Map<String, String> values) {
        internalGetMutableUserFeatures().getMutableMap()
            .putAll(values);
        return this;
      }

      private shade.protobuf.LazyStringList itemIds_ = shade.protobuf.LazyStringArrayList.EMPTY;
      private void ensureItemIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          itemIds_ = new shade.protobuf.LazyStringArrayList(itemIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * item ids
       * </pre>
       *
       * <code>repeated string item_ids = 3;</code>
       */
      public shade.protobuf.ProtocolStringList
          getItemIdsList() {
        return itemIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       * item ids
       * </pre>
       *
       * <code>repeated string item_ids = 3;</code>
       */
      public int getItemIdsCount() {
        return itemIds_.size();
      }
      /**
       * <pre>
       * item ids
       * </pre>
       *
       * <code>repeated string item_ids = 3;</code>
       */
      public String getItemIds(int index) {
        return itemIds_.get(index);
      }
      /**
       * <pre>
       * item ids
       * </pre>
       *
       * <code>repeated string item_ids = 3;</code>
       */
      public shade.protobuf.ByteString
          getItemIdsBytes(int index) {
        return itemIds_.getByteString(index);
      }
      /**
       * <pre>
       * item ids
       * </pre>
       *
       * <code>repeated string item_ids = 3;</code>
       */
      public Builder setItemIds(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureItemIdsIsMutable();
        itemIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * item ids
       * </pre>
       *
       * <code>repeated string item_ids = 3;</code>
       */
      public Builder addItemIds(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureItemIdsIsMutable();
        itemIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * item ids
       * </pre>
       *
       * <code>repeated string item_ids = 3;</code>
       */
      public Builder addAllItemIds(
          Iterable<String> values) {
        ensureItemIdsIsMutable();
        shade.protobuf.AbstractMessageLite.Builder.addAll(
            values, itemIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * item ids
       * </pre>
       *
       * <code>repeated string item_ids = 3;</code>
       */
      public Builder clearItemIds() {
        itemIds_ = shade.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * item ids
       * </pre>
       *
       * <code>repeated string item_ids = 3;</code>
       */
      public Builder addItemIdsBytes(
          shade.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureItemIdsIsMutable();
        itemIds_.add(value);
        onChanged();
        return this;
      }

      private shade.protobuf.MapField<
          String, ContextFeatures> contextFeatures_;
      private shade.protobuf.MapField<String, ContextFeatures>
      internalGetContextFeatures() {
        if (contextFeatures_ == null) {
          return shade.protobuf.MapField.emptyMapField(
              ContextFeaturesDefaultEntryHolder.defaultEntry);
        }
        return contextFeatures_;
      }
      private shade.protobuf.MapField<String, ContextFeatures>
      internalGetMutableContextFeatures() {
        onChanged();;
        if (contextFeatures_ == null) {
          contextFeatures_ = shade.protobuf.MapField.newMapField(
              ContextFeaturesDefaultEntryHolder.defaultEntry);
        }
        if (!contextFeatures_.isMutable()) {
          contextFeatures_ = contextFeatures_.copy();
        }
        return contextFeatures_;
      }

      public int getContextFeaturesCount() {
        return internalGetContextFeatures().getMap().size();
      }
      /**
       * <pre>
       * context features for each item
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
       */

      public boolean containsContextFeatures(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetContextFeatures().getMap().containsKey(key);
      }
      /**
       * Use {@link #getContextFeaturesMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, ContextFeatures> getContextFeatures() {
        return getContextFeaturesMap();
      }
      /**
       * <pre>
       * context features for each item
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
       */

      public java.util.Map<String, ContextFeatures> getContextFeaturesMap() {
        return internalGetContextFeatures().getMap();
      }
      /**
       * <pre>
       * context features for each item
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
       */

      public ContextFeatures getContextFeaturesOrDefault(
          String key,
          ContextFeatures defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, ContextFeatures> map =
            internalGetContextFeatures().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * context features for each item
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
       */

      public ContextFeatures getContextFeaturesOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, ContextFeatures> map =
            internalGetContextFeatures().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearContextFeatures() {
        internalGetMutableContextFeatures().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * context features for each item
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
       */

      public Builder removeContextFeatures(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableContextFeatures().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, ContextFeatures>
      getMutableContextFeatures() {
        return internalGetMutableContextFeatures().getMutableMap();
      }
      /**
       * <pre>
       * context features for each item
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
       */
      public Builder putContextFeatures(
          String key,
          ContextFeatures value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableContextFeatures().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * context features for each item
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.ContextFeatures&gt; context_features = 4;</code>
       */

      public Builder putAllContextFeatures(
          java.util.Map<String, ContextFeatures> values) {
        internalGetMutableContextFeatures().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:eas.aggregator.PBRequest)
    }

    // @@protoc_insertion_point(class_scope:eas.aggregator.PBRequest)
    private static final PBRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PBRequest();
    }

    public static PBRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final shade.protobuf.Parser<PBRequest>
        PARSER = new shade.protobuf.AbstractParser<PBRequest>() {
      public PBRequest parsePartialFrom(
          shade.protobuf.CodedInputStream input,
          shade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws shade.protobuf.InvalidProtocolBufferException {
          return new PBRequest(input, extensionRegistry);
      }
    };

    public static shade.protobuf.Parser<PBRequest> parser() {
      return PARSER;
    }

    @Override
    public shade.protobuf.Parser<PBRequest> getParserForType() {
      return PARSER;
    }

    public PBRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResultsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:eas.aggregator.Results)
      shade.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double scores = 1 [packed = true];</code>
     */
    java.util.List<Double> getScoresList();
    /**
     * <code>repeated double scores = 1 [packed = true];</code>
     */
    int getScoresCount();
    /**
     * <code>repeated double scores = 1 [packed = true];</code>
     */
    double getScores(int index);
  }
  /**
   * <pre>
   * return results
   * </pre>
   *
   * Protobuf type {@code eas.aggregator.Results}
   */
  public  static final class Results extends
      shade.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:eas.aggregator.Results)
      ResultsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Results.newBuilder() to construct.
    private Results(shade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Results() {
      scores_ = java.util.Collections.emptyList();
    }

    @Override
    public final shade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Results(
        shade.protobuf.CodedInputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      shade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                scores_ = new java.util.ArrayList<Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              scores_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                scores_ = new java.util.ArrayList<Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                scores_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (shade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          scores_ = java.util.Collections.unmodifiableList(scores_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EasyRecProtos.internal_static_eas_aggregator_Results_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EasyRecProtos.internal_static_eas_aggregator_Results_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Results.class, Builder.class);
    }

    public static final int SCORES_FIELD_NUMBER = 1;
    private java.util.List<Double> scores_;
    /**
     * <code>repeated double scores = 1 [packed = true];</code>
     */
    public java.util.List<Double>
        getScoresList() {
      return scores_;
    }
    /**
     * <code>repeated double scores = 1 [packed = true];</code>
     */
    public int getScoresCount() {
      return scores_.size();
    }
    /**
     * <code>repeated double scores = 1 [packed = true];</code>
     */
    public double getScores(int index) {
      return scores_.get(index);
    }
    private int scoresMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(shade.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getScoresList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(scoresMemoizedSerializedSize);
      }
      for (int i = 0; i < scores_.size(); i++) {
        output.writeDoubleNoTag(scores_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getScoresList().size();
        size += dataSize;
        if (!getScoresList().isEmpty()) {
          size += 1;
          size += shade.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        scoresMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Results)) {
        return super.equals(obj);
      }
      Results other = (Results) obj;

      boolean result = true;
      result = result && getScoresList()
          .equals(other.getScoresList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getScoresCount() > 0) {
        hash = (37 * hash) + SCORES_FIELD_NUMBER;
        hash = (53 * hash) + getScoresList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Results parseFrom(
        java.nio.ByteBuffer data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Results parseFrom(
        java.nio.ByteBuffer data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Results parseFrom(
        shade.protobuf.ByteString data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Results parseFrom(
        shade.protobuf.ByteString data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Results parseFrom(byte[] data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Results parseFrom(
        byte[] data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Results parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Results parseFrom(
        java.io.InputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Results parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Results parseDelimitedFrom(
        java.io.InputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Results parseFrom(
        shade.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Results parseFrom(
        shade.protobuf.CodedInputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Results prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * return results
     * </pre>
     *
     * Protobuf type {@code eas.aggregator.Results}
     */
    public static final class Builder extends
        shade.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:eas.aggregator.Results)
        ResultsOrBuilder {
      public static final shade.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EasyRecProtos.internal_static_eas_aggregator_Results_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EasyRecProtos.internal_static_eas_aggregator_Results_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Results.class, Builder.class);
      }

      // Construct using com.alibaba.openrec.proto.EasyRecProtos.Results.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        scores_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public shade.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EasyRecProtos.internal_static_eas_aggregator_Results_descriptor;
      }

      public Results getDefaultInstanceForType() {
        return Results.getDefaultInstance();
      }

      public Results build() {
        Results result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Results buildPartial() {
        Results result = new Results(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          scores_ = java.util.Collections.unmodifiableList(scores_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.scores_ = scores_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          shade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          shade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(shade.protobuf.Message other) {
        if (other instanceof Results) {
          return mergeFrom((Results)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Results other) {
        if (other == Results.getDefaultInstance()) return this;
        if (!other.scores_.isEmpty()) {
          if (scores_.isEmpty()) {
            scores_ = other.scores_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureScoresIsMutable();
            scores_.addAll(other.scores_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          shade.protobuf.CodedInputStream input,
          shade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Results parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Results) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Double> scores_ = java.util.Collections.emptyList();
      private void ensureScoresIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          scores_ = new java.util.ArrayList<Double>(scores_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double scores = 1 [packed = true];</code>
       */
      public java.util.List<Double>
          getScoresList() {
        return java.util.Collections.unmodifiableList(scores_);
      }
      /**
       * <code>repeated double scores = 1 [packed = true];</code>
       */
      public int getScoresCount() {
        return scores_.size();
      }
      /**
       * <code>repeated double scores = 1 [packed = true];</code>
       */
      public double getScores(int index) {
        return scores_.get(index);
      }
      /**
       * <code>repeated double scores = 1 [packed = true];</code>
       */
      public Builder setScores(
          int index, double value) {
        ensureScoresIsMutable();
        scores_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double scores = 1 [packed = true];</code>
       */
      public Builder addScores(double value) {
        ensureScoresIsMutable();
        scores_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double scores = 1 [packed = true];</code>
       */
      public Builder addAllScores(
          Iterable<? extends Double> values) {
        ensureScoresIsMutable();
        shade.protobuf.AbstractMessageLite.Builder.addAll(
            values, scores_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double scores = 1 [packed = true];</code>
       */
      public Builder clearScores() {
        scores_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:eas.aggregator.Results)
    }

    // @@protoc_insertion_point(class_scope:eas.aggregator.Results)
    private static final Results DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Results();
    }

    public static Results getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final shade.protobuf.Parser<Results>
        PARSER = new shade.protobuf.AbstractParser<Results>() {
      public Results parsePartialFrom(
          shade.protobuf.CodedInputStream input,
          shade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws shade.protobuf.InvalidProtocolBufferException {
          return new Results(input, extensionRegistry);
      }
    };

    public static shade.protobuf.Parser<Results> parser() {
      return PARSER;
    }

    @Override
    public shade.protobuf.Parser<Results> getParserForType() {
      return PARSER;
    }

    public Results getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PBResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:eas.aggregator.PBResponse)
      shade.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * results
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
     */
    int getResultsCount();
    /**
     * <pre>
     * results
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
     */
    boolean containsResults(
        String key);
    /**
     * Use {@link #getResultsMap()} instead.
     */
    @Deprecated
    java.util.Map<String, Results>
    getResults();
    /**
     * <pre>
     * results
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
     */
    java.util.Map<String, Results>
    getResultsMap();
    /**
     * <pre>
     * results
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
     */

    Results getResultsOrDefault(
        String key,
        Results defaultValue);
    /**
     * <pre>
     * results
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
     */

    Results getResultsOrThrow(
        String key);

    /**
     * <pre>
     * item features
     * </pre>
     *
     * <code>map&lt;string, string&gt; item_features = 2;</code>
     */
    int getItemFeaturesCount();
    /**
     * <pre>
     * item features
     * </pre>
     *
     * <code>map&lt;string, string&gt; item_features = 2;</code>
     */
    boolean containsItemFeatures(
        String key);
    /**
     * Use {@link #getItemFeaturesMap()} instead.
     */
    @Deprecated
    java.util.Map<String, String>
    getItemFeatures();
    /**
     * <pre>
     * item features
     * </pre>
     *
     * <code>map&lt;string, string&gt; item_features = 2;</code>
     */
    java.util.Map<String, String>
    getItemFeaturesMap();
    /**
     * <pre>
     * item features
     * </pre>
     *
     * <code>map&lt;string, string&gt; item_features = 2;</code>
     */

    String getItemFeaturesOrDefault(
        String key,
        String defaultValue);
    /**
     * <pre>
     * item features
     * </pre>
     *
     * <code>map&lt;string, string&gt; item_features = 2;</code>
     */

    String getItemFeaturesOrThrow(
        String key);
  }
  /**
   * <pre>
   * PBResponse specifies the response for aggregator
   * </pre>
   *
   * Protobuf type {@code eas.aggregator.PBResponse}
   */
  public  static final class PBResponse extends
      shade.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:eas.aggregator.PBResponse)
      PBResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PBResponse.newBuilder() to construct.
    private PBResponse(shade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PBResponse() {
    }

    @Override
    public final shade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PBResponse(
        shade.protobuf.CodedInputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      shade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                results_ = shade.protobuf.MapField.newMapField(
                    ResultsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              shade.protobuf.MapEntry<String, Results>
              results__ = input.readMessage(
                  ResultsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              results_.getMutableMap().put(
                  results__.getKey(), results__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                itemFeatures_ = shade.protobuf.MapField.newMapField(
                    ItemFeaturesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              shade.protobuf.MapEntry<String, String>
              itemFeatures__ = input.readMessage(
                  ItemFeaturesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              itemFeatures_.getMutableMap().put(
                  itemFeatures__.getKey(), itemFeatures__.getValue());
              break;
            }
          }
        }
      } catch (shade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EasyRecProtos.internal_static_eas_aggregator_PBResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected shade.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetResults();
        case 2:
          return internalGetItemFeatures();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EasyRecProtos.internal_static_eas_aggregator_PBResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PBResponse.class, Builder.class);
    }

    public static final int RESULTS_FIELD_NUMBER = 1;
    private static final class ResultsDefaultEntryHolder {
      static final shade.protobuf.MapEntry<
          String, Results> defaultEntry =
              shade.protobuf.MapEntry
              .<String, Results>newDefaultInstance(
                  EasyRecProtos.internal_static_eas_aggregator_PBResponse_ResultsEntry_descriptor,
                  shade.protobuf.WireFormat.FieldType.STRING,
                  "",
                  shade.protobuf.WireFormat.FieldType.MESSAGE,
                  Results.getDefaultInstance());
    }
    private shade.protobuf.MapField<
        String, Results> results_;
    private shade.protobuf.MapField<String, Results>
    internalGetResults() {
      if (results_ == null) {
        return shade.protobuf.MapField.emptyMapField(
            ResultsDefaultEntryHolder.defaultEntry);
      }
      return results_;
    }

    public int getResultsCount() {
      return internalGetResults().getMap().size();
    }
    /**
     * <pre>
     * results
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
     */

    public boolean containsResults(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetResults().getMap().containsKey(key);
    }
    /**
     * Use {@link #getResultsMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, Results> getResults() {
      return getResultsMap();
    }
    /**
     * <pre>
     * results
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
     */

    public java.util.Map<String, Results> getResultsMap() {
      return internalGetResults().getMap();
    }
    /**
     * <pre>
     * results
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
     */

    public Results getResultsOrDefault(
        String key,
        Results defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Results> map =
          internalGetResults().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * results
     * </pre>
     *
     * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
     */

    public Results getResultsOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Results> map =
          internalGetResults().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ITEM_FEATURES_FIELD_NUMBER = 2;
    private static final class ItemFeaturesDefaultEntryHolder {
      static final shade.protobuf.MapEntry<
          String, String> defaultEntry =
              shade.protobuf.MapEntry
              .<String, String>newDefaultInstance(
                  EasyRecProtos.internal_static_eas_aggregator_PBResponse_ItemFeaturesEntry_descriptor,
                  shade.protobuf.WireFormat.FieldType.STRING,
                  "",
                  shade.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private shade.protobuf.MapField<
        String, String> itemFeatures_;
    private shade.protobuf.MapField<String, String>
    internalGetItemFeatures() {
      if (itemFeatures_ == null) {
        return shade.protobuf.MapField.emptyMapField(
            ItemFeaturesDefaultEntryHolder.defaultEntry);
      }
      return itemFeatures_;
    }

    public int getItemFeaturesCount() {
      return internalGetItemFeatures().getMap().size();
    }
    /**
     * <pre>
     * item features
     * </pre>
     *
     * <code>map&lt;string, string&gt; item_features = 2;</code>
     */

    public boolean containsItemFeatures(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetItemFeatures().getMap().containsKey(key);
    }
    /**
     * Use {@link #getItemFeaturesMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, String> getItemFeatures() {
      return getItemFeaturesMap();
    }
    /**
     * <pre>
     * item features
     * </pre>
     *
     * <code>map&lt;string, string&gt; item_features = 2;</code>
     */

    public java.util.Map<String, String> getItemFeaturesMap() {
      return internalGetItemFeatures().getMap();
    }
    /**
     * <pre>
     * item features
     * </pre>
     *
     * <code>map&lt;string, string&gt; item_features = 2;</code>
     */

    public String getItemFeaturesOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetItemFeatures().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * item features
     * </pre>
     *
     * <code>map&lt;string, string&gt; item_features = 2;</code>
     */

    public String getItemFeaturesOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetItemFeatures().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(shade.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      shade.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetResults(),
          ResultsDefaultEntryHolder.defaultEntry,
          1);
      shade.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetItemFeatures(),
          ItemFeaturesDefaultEntryHolder.defaultEntry,
          2);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<String, Results> entry
           : internalGetResults().getMap().entrySet()) {
        shade.protobuf.MapEntry<String, Results>
        results__ = ResultsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += shade.protobuf.CodedOutputStream
            .computeMessageSize(1, results__);
      }
      for (java.util.Map.Entry<String, String> entry
           : internalGetItemFeatures().getMap().entrySet()) {
        shade.protobuf.MapEntry<String, String>
        itemFeatures__ = ItemFeaturesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += shade.protobuf.CodedOutputStream
            .computeMessageSize(2, itemFeatures__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PBResponse)) {
        return super.equals(obj);
      }
      PBResponse other = (PBResponse) obj;

      boolean result = true;
      result = result && internalGetResults().equals(
          other.internalGetResults());
      result = result && internalGetItemFeatures().equals(
          other.internalGetItemFeatures());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetResults().getMap().isEmpty()) {
        hash = (37 * hash) + RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetResults().hashCode();
      }
      if (!internalGetItemFeatures().getMap().isEmpty()) {
        hash = (37 * hash) + ITEM_FEATURES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetItemFeatures().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PBResponse parseFrom(
        java.nio.ByteBuffer data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBResponse parseFrom(
        java.nio.ByteBuffer data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBResponse parseFrom(
        shade.protobuf.ByteString data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBResponse parseFrom(
        shade.protobuf.ByteString data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBResponse parseFrom(byte[] data)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBResponse parseFrom(
        byte[] data,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PBResponse parseFrom(
        java.io.InputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PBResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PBResponse parseDelimitedFrom(
        java.io.InputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PBResponse parseFrom(
        shade.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PBResponse parseFrom(
        shade.protobuf.CodedInputStream input,
        shade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PBResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PBResponse specifies the response for aggregator
     * </pre>
     *
     * Protobuf type {@code eas.aggregator.PBResponse}
     */
    public static final class Builder extends
        shade.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:eas.aggregator.PBResponse)
        PBResponseOrBuilder {
      public static final shade.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EasyRecProtos.internal_static_eas_aggregator_PBResponse_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetResults();
          case 2:
            return internalGetItemFeatures();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected shade.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableResults();
          case 2:
            return internalGetMutableItemFeatures();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EasyRecProtos.internal_static_eas_aggregator_PBResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PBResponse.class, Builder.class);
      }

      // Construct using com.alibaba.openrec.proto.EasyRecProtos.PBResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableResults().clear();
        internalGetMutableItemFeatures().clear();
        return this;
      }

      public shade.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EasyRecProtos.internal_static_eas_aggregator_PBResponse_descriptor;
      }

      public PBResponse getDefaultInstanceForType() {
        return PBResponse.getDefaultInstance();
      }

      public PBResponse build() {
        PBResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PBResponse buildPartial() {
        PBResponse result = new PBResponse(this);
        int from_bitField0_ = bitField0_;
        result.results_ = internalGetResults();
        result.results_.makeImmutable();
        result.itemFeatures_ = internalGetItemFeatures();
        result.itemFeatures_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          shade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          shade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          shade.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(shade.protobuf.Message other) {
        if (other instanceof PBResponse) {
          return mergeFrom((PBResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PBResponse other) {
        if (other == PBResponse.getDefaultInstance()) return this;
        internalGetMutableResults().mergeFrom(
            other.internalGetResults());
        internalGetMutableItemFeatures().mergeFrom(
            other.internalGetItemFeatures());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          shade.protobuf.CodedInputStream input,
          shade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PBResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PBResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private shade.protobuf.MapField<
          String, Results> results_;
      private shade.protobuf.MapField<String, Results>
      internalGetResults() {
        if (results_ == null) {
          return shade.protobuf.MapField.emptyMapField(
              ResultsDefaultEntryHolder.defaultEntry);
        }
        return results_;
      }
      private shade.protobuf.MapField<String, Results>
      internalGetMutableResults() {
        onChanged();;
        if (results_ == null) {
          results_ = shade.protobuf.MapField.newMapField(
              ResultsDefaultEntryHolder.defaultEntry);
        }
        if (!results_.isMutable()) {
          results_ = results_.copy();
        }
        return results_;
      }

      public int getResultsCount() {
        return internalGetResults().getMap().size();
      }
      /**
       * <pre>
       * results
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
       */

      public boolean containsResults(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetResults().getMap().containsKey(key);
      }
      /**
       * Use {@link #getResultsMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, Results> getResults() {
        return getResultsMap();
      }
      /**
       * <pre>
       * results
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
       */

      public java.util.Map<String, Results> getResultsMap() {
        return internalGetResults().getMap();
      }
      /**
       * <pre>
       * results
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
       */

      public Results getResultsOrDefault(
          String key,
          Results defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Results> map =
            internalGetResults().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * results
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
       */

      public Results getResultsOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Results> map =
            internalGetResults().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearResults() {
        internalGetMutableResults().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * results
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
       */

      public Builder removeResults(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableResults().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, Results>
      getMutableResults() {
        return internalGetMutableResults().getMutableMap();
      }
      /**
       * <pre>
       * results
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
       */
      public Builder putResults(
          String key,
          Results value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableResults().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * results
       * </pre>
       *
       * <code>map&lt;string, .eas.aggregator.Results&gt; results = 1;</code>
       */

      public Builder putAllResults(
          java.util.Map<String, Results> values) {
        internalGetMutableResults().getMutableMap()
            .putAll(values);
        return this;
      }

      private shade.protobuf.MapField<
          String, String> itemFeatures_;
      private shade.protobuf.MapField<String, String>
      internalGetItemFeatures() {
        if (itemFeatures_ == null) {
          return shade.protobuf.MapField.emptyMapField(
              ItemFeaturesDefaultEntryHolder.defaultEntry);
        }
        return itemFeatures_;
      }
      private shade.protobuf.MapField<String, String>
      internalGetMutableItemFeatures() {
        onChanged();;
        if (itemFeatures_ == null) {
          itemFeatures_ = shade.protobuf.MapField.newMapField(
              ItemFeaturesDefaultEntryHolder.defaultEntry);
        }
        if (!itemFeatures_.isMutable()) {
          itemFeatures_ = itemFeatures_.copy();
        }
        return itemFeatures_;
      }

      public int getItemFeaturesCount() {
        return internalGetItemFeatures().getMap().size();
      }
      /**
       * <pre>
       * item features
       * </pre>
       *
       * <code>map&lt;string, string&gt; item_features = 2;</code>
       */

      public boolean containsItemFeatures(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetItemFeatures().getMap().containsKey(key);
      }
      /**
       * Use {@link #getItemFeaturesMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, String> getItemFeatures() {
        return getItemFeaturesMap();
      }
      /**
       * <pre>
       * item features
       * </pre>
       *
       * <code>map&lt;string, string&gt; item_features = 2;</code>
       */

      public java.util.Map<String, String> getItemFeaturesMap() {
        return internalGetItemFeatures().getMap();
      }
      /**
       * <pre>
       * item features
       * </pre>
       *
       * <code>map&lt;string, string&gt; item_features = 2;</code>
       */

      public String getItemFeaturesOrDefault(
          String key,
          String defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetItemFeatures().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * item features
       * </pre>
       *
       * <code>map&lt;string, string&gt; item_features = 2;</code>
       */

      public String getItemFeaturesOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetItemFeatures().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearItemFeatures() {
        internalGetMutableItemFeatures().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * item features
       * </pre>
       *
       * <code>map&lt;string, string&gt; item_features = 2;</code>
       */

      public Builder removeItemFeatures(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableItemFeatures().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, String>
      getMutableItemFeatures() {
        return internalGetMutableItemFeatures().getMutableMap();
      }
      /**
       * <pre>
       * item features
       * </pre>
       *
       * <code>map&lt;string, string&gt; item_features = 2;</code>
       */
      public Builder putItemFeatures(
          String key,
          String value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableItemFeatures().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * item features
       * </pre>
       *
       * <code>map&lt;string, string&gt; item_features = 2;</code>
       */

      public Builder putAllItemFeatures(
          java.util.Map<String, String> values) {
        internalGetMutableItemFeatures().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final shade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:eas.aggregator.PBResponse)
    }

    // @@protoc_insertion_point(class_scope:eas.aggregator.PBResponse)
    private static final PBResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PBResponse();
    }

    public static PBResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final shade.protobuf.Parser<PBResponse>
        PARSER = new shade.protobuf.AbstractParser<PBResponse>() {
      public PBResponse parsePartialFrom(
          shade.protobuf.CodedInputStream input,
          shade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws shade.protobuf.InvalidProtocolBufferException {
          return new PBResponse(input, extensionRegistry);
      }
    };

    public static shade.protobuf.Parser<PBResponse> parser() {
      return PARSER;
    }

    @Override
    public shade.protobuf.Parser<PBResponse> getParserForType() {
      return PARSER;
    }

    public PBResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final shade.protobuf.Descriptors.Descriptor
    internal_static_eas_aggregator_ContextFeatures_descriptor;
  private static final 
    shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_eas_aggregator_ContextFeatures_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
    internal_static_eas_aggregator_PBRequest_descriptor;
  private static final 
    shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_eas_aggregator_PBRequest_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
    internal_static_eas_aggregator_PBRequest_UserFeaturesEntry_descriptor;
  private static final 
    shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_eas_aggregator_PBRequest_UserFeaturesEntry_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
    internal_static_eas_aggregator_PBRequest_ContextFeaturesEntry_descriptor;
  private static final 
    shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_eas_aggregator_PBRequest_ContextFeaturesEntry_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
    internal_static_eas_aggregator_Results_descriptor;
  private static final 
    shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_eas_aggregator_Results_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
    internal_static_eas_aggregator_PBResponse_descriptor;
  private static final 
    shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_eas_aggregator_PBResponse_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
    internal_static_eas_aggregator_PBResponse_ResultsEntry_descriptor;
  private static final 
    shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_eas_aggregator_PBResponse_ResultsEntry_fieldAccessorTable;
  private static final shade.protobuf.Descriptors.Descriptor
    internal_static_eas_aggregator_PBResponse_ItemFeaturesEntry_descriptor;
  private static final 
    shade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_eas_aggregator_PBResponse_ItemFeaturesEntry_fieldAccessorTable;

  public static shade.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  shade.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\reasyrec.proto\022\016eas.aggregator\"#\n\017Conte" +
      "xtFeatures\022\020\n\010features\030\001 \003(\t\"\315\002\n\tPBReque" +
      "st\022\022\n\ndebug_mode\030\001 \001(\010\022B\n\ruser_features\030" +
      "\002 \003(\0132+.eas.aggregator.PBRequest.UserFea" +
      "turesEntry\022\020\n\010item_ids\030\003 \003(\t\022H\n\020context_" +
      "features\030\004 \003(\0132..eas.aggregator.PBReques" +
      "t.ContextFeaturesEntry\0323\n\021UserFeaturesEn" +
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032W\n\024C" +
      "ontextFeaturesEntry\022\013\n\003key\030\001 \001(\t\022.\n\005valu" +
      "e\030\002 \001(\0132\037.eas.aggregator.ContextFeatures",
      ":\0028\001\"\035\n\007Results\022\022\n\006scores\030\001 \003(\001B\002\020\001\"\211\002\n\n" +
      "PBResponse\0228\n\007results\030\001 \003(\0132\'.eas.aggreg" +
      "ator.PBResponse.ResultsEntry\022C\n\ritem_fea" +
      "tures\030\002 \003(\0132,.eas.aggregator.PBResponse." +
      "ItemFeaturesEntry\032G\n\014ResultsEntry\022\013\n\003key" +
      "\030\001 \001(\t\022&\n\005value\030\002 \001(\0132\027.eas.aggregator.R" +
      "esults:\0028\001\0323\n\021ItemFeaturesEntry\022\013\n\003key\030\001" +
      " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B-\n\031com.alibaba.o" +
      "penrec.protoB\rEasyRecProtos\370\001\001b\006proto3"
    };
    shade.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new shade.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public shade.protobuf.ExtensionRegistry assignDescriptors(
              shade.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    shade.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new shade.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_eas_aggregator_ContextFeatures_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_eas_aggregator_ContextFeatures_fieldAccessorTable = new
      shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_eas_aggregator_ContextFeatures_descriptor,
        new String[] { "Features", });
    internal_static_eas_aggregator_PBRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_eas_aggregator_PBRequest_fieldAccessorTable = new
      shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_eas_aggregator_PBRequest_descriptor,
        new String[] { "DebugMode", "UserFeatures", "ItemIds", "ContextFeatures", });
    internal_static_eas_aggregator_PBRequest_UserFeaturesEntry_descriptor =
      internal_static_eas_aggregator_PBRequest_descriptor.getNestedTypes().get(0);
    internal_static_eas_aggregator_PBRequest_UserFeaturesEntry_fieldAccessorTable = new
      shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_eas_aggregator_PBRequest_UserFeaturesEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_eas_aggregator_PBRequest_ContextFeaturesEntry_descriptor =
      internal_static_eas_aggregator_PBRequest_descriptor.getNestedTypes().get(1);
    internal_static_eas_aggregator_PBRequest_ContextFeaturesEntry_fieldAccessorTable = new
      shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_eas_aggregator_PBRequest_ContextFeaturesEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_eas_aggregator_Results_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_eas_aggregator_Results_fieldAccessorTable = new
      shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_eas_aggregator_Results_descriptor,
        new String[] { "Scores", });
    internal_static_eas_aggregator_PBResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_eas_aggregator_PBResponse_fieldAccessorTable = new
      shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_eas_aggregator_PBResponse_descriptor,
        new String[] { "Results", "ItemFeatures", });
    internal_static_eas_aggregator_PBResponse_ResultsEntry_descriptor =
      internal_static_eas_aggregator_PBResponse_descriptor.getNestedTypes().get(0);
    internal_static_eas_aggregator_PBResponse_ResultsEntry_fieldAccessorTable = new
      shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_eas_aggregator_PBResponse_ResultsEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_eas_aggregator_PBResponse_ItemFeaturesEntry_descriptor =
      internal_static_eas_aggregator_PBResponse_descriptor.getNestedTypes().get(1);
    internal_static_eas_aggregator_PBResponse_ItemFeaturesEntry_fieldAccessorTable = new
      shade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_eas_aggregator_PBResponse_ItemFeaturesEntry_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
